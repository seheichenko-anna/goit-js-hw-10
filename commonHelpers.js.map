{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nlet countdownInterval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] > Date.now()) {\n      userSelectedDate = selectedDates[0];\n      document.querySelector('[data-start]').removeAttribute('disabled');\n    } else {\n      document.querySelector('[data-start]').setAttribute('disabled', '');\n      iziToast.show({\n        title: 'Warning',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        backgroundColor: '#EF4040',\n        titleColor: '#FFFFFF',\n        messageColor: '#FFFFFF',\n      });\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nconst countdownTimer = () => {\n  const now = Date.now();\n  const distance = userSelectedDate - now;\n\n  if (distance < 0) {\n    clearInterval(countdownInterval);\n  } else {\n    displaySelectedDate(distance);\n    document.querySelector('[data-start]').setAttribute('disabled', '');\n  }\n};\n\nfunction displaySelectedDate(distance) {\n  const { days, hours, minutes, seconds } = convertMs(distance);\n\n  document.querySelector('[data-days]').innerText = addLeadingZero(days);\n  document.querySelector('[data-hours]').innerText = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').innerText = addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').innerText = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(time) {\n  return time.toString().padStart(2, '0');\n}\n\ndocument.querySelector('[data-start]').addEventListener('click', () => {\n  document.getElementById('datetime-picker').setAttribute('disabled', '');\n  countdownInterval = setInterval(countdownTimer, 1000);\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","countdownInterval","options","selectedDates","iziToast","flatpickr","countdownTimer","now","distance","displaySelectedDate","days","hours","minutes","seconds","convertMs","addLeadingZero","time","ms"],"mappings":"+IAKA,IAAIA,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,GAAK,KAAK,IAAG,GAC7BH,EAAmBG,EAAc,GACjC,SAAS,cAAc,cAAc,EAAE,gBAAgB,UAAU,IAEjE,SAAS,cAAc,cAAc,EAAE,aAAa,WAAY,EAAE,EAClEC,EAAS,KAAK,CACZ,MAAO,UACP,QAAS,qCACT,SAAU,WACV,gBAAiB,UACjB,WAAY,UACZ,aAAc,SACtB,CAAO,EAEJ,CACH,EAEAC,EAAU,mBAAoBH,CAAO,EAErC,MAAMI,EAAiB,IAAM,CAC3B,MAAMC,EAAM,KAAK,MACXC,EAAWR,EAAmBO,EAEhCC,EAAW,EACb,cAAcP,CAAiB,GAE/BQ,EAAoBD,CAAQ,EAC5B,SAAS,cAAc,cAAc,EAAE,aAAa,WAAY,EAAE,EAEtE,EAEA,SAASC,EAAoBD,EAAU,CACrC,KAAM,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAQ,EAE5D,SAAS,cAAc,aAAa,EAAE,UAAYO,EAAeL,CAAI,EACrE,SAAS,cAAc,cAAc,EAAE,UAAYK,EAAeJ,CAAK,EACvE,SAAS,cAAc,gBAAgB,EAAE,UAAYI,EAAeH,CAAO,EAC3E,SAAS,cAAc,gBAAgB,EAAE,UAAYG,EAAeF,CAAO,CAC7E,CAEA,SAASE,EAAeC,EAAM,CAC5B,OAAOA,EAAK,SAAU,EAAC,SAAS,EAAG,GAAG,CACxC,CAEA,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,IAAM,CACrE,SAAS,eAAe,iBAAiB,EAAE,aAAa,WAAY,EAAE,EACtEf,EAAoB,YAAYK,EAAgB,GAAI,CACtD,CAAC,EAED,SAASQ,EAAUG,EAAI,CAQrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}